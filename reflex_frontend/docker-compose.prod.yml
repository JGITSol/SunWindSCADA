version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.reflex
      args:
        - NODE_ENV=production
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - REFLEX_ENV=prod
      - API_URL=http://backend:8000
    restart: always
    networks:
      - scada-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    image: your-backend-image:prod
    ports:
      - "8000:8000"
    environment:
      - DB_URL=postgresql://scada_user:${DB_PASSWORD}@db:5432/scada_db
      - DJANGO_SETTINGS_MODULE=config.settings.production
    restart: always
    depends_on:
      - db
    networks:
      - scada-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=scada_user
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=scada_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    restart: always
    networks:
      - scada-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U scada_user -d scada_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./certs:/etc/ssl/certs
      - ./certs:/etc/ssl/private
    depends_on:
      - frontend
      - backend
    networks:
      - scada-network
    restart: always

networks:
  scada-network:
    driver: bridge

volumes:
  postgres_data:
