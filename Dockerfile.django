# Stage 1: Builder
FROM python:3.12-slim AS builder

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1

WORKDIR /app

# Install build dependencies for postgresql
RUN apt-get update && apt-get install -y --no-install-recommends build-essential libpq-dev && rm -rf /var/lib/apt/lists/*

# Copy and install requirements
COPY requirements.txt .
# Install and use uv, a faster package installer, as requested.
RUN pip install uv
RUN uv pip install --system --no-cache -r requirements.txt

# Stage 2: Final image
FROM python:3.12-slim

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1

WORKDIR /app

# Install dos2unix to fix line endings on the entrypoint script
RUN apt-get update && apt-get install -y --no-install-recommends dos2unix && rm -rf /var/lib/apt/lists/*

# Create a non-root user
RUN addgroup --system django && adduser --system --ingroup django django

# Copy installed packages and executables from builder stage
COPY --from=builder /usr/local/lib/python3.12/site-packages /usr/local/lib/python3.12/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

# Copy application code
COPY . .

# Copy the entrypoint script and fix line endings
COPY docker-entrypoint.sh /docker-entrypoint.sh
RUN dos2unix /docker-entrypoint.sh && chmod +x /docker-entrypoint.sh

# Change ownership of the app directory and entrypoint script
RUN chown -R django:django /app && chown django:django /docker-entrypoint.sh

# Switch to the non-root user
USER django

EXPOSE 8000

ENTRYPOINT ["/docker-entrypoint.sh"]
