# Generated by Django 5.0.14 on 2025-06-20 21:06

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Scenario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField()),
                ("active", models.BooleanField(default=False)),
                (
                    "scenario_type",
                    models.CharField(
                        choices=[
                            ("normal_operation", "Normal Operation"),
                            ("grid_fault", "Grid Fault"),
                            ("turbine_failure", "Turbine Failure"),
                            ("storm", "Storm Conditions"),
                            ("custom", "Custom Scenario"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "parameters",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="JSON parameters specific to the scenario type",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="WeatherData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("wind_speed", models.FloatField(help_text="Wind speed in m/s")),
                (
                    "wind_direction",
                    models.FloatField(
                        blank=True, help_text="Wind direction in degrees", null=True
                    ),
                ),
                ("temperature", models.FloatField(help_text="Temperature in Celsius")),
                (
                    "pressure",
                    models.FloatField(help_text="Atmospheric pressure in hPa"),
                ),
                ("humidity", models.FloatField(help_text="Relative humidity in %")),
            ],
        ),
        migrations.CreateModel(
            name="WindTurbine",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("hub_height", models.FloatField(help_text="Hub height in meters")),
                (
                    "rotor_diameter",
                    models.FloatField(help_text="Rotor diameter in meters"),
                ),
                ("nominal_power", models.FloatField(help_text="Nominal power in W")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("operational", "Operational"),
                            ("maintenance", "Under Maintenance"),
                            ("fault", "Fault"),
                            ("offline", "Offline"),
                        ],
                        default="operational",
                        max_length=32,
                    ),
                ),
                ("latitude", models.FloatField(blank=True, null=True)),
                ("longitude", models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="TurbineMeasurement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("power_output", models.FloatField(help_text="Power output in W")),
                (
                    "wind_speed",
                    models.FloatField(help_text="Local wind speed at turbine in m/s"),
                ),
                (
                    "rotor_speed",
                    models.FloatField(
                        blank=True, help_text="Rotor speed in rpm", null=True
                    ),
                ),
                (
                    "blade_pitch",
                    models.FloatField(
                        blank=True, help_text="Blade pitch angle in degrees", null=True
                    ),
                ),
                (
                    "nacelle_orientation",
                    models.FloatField(
                        blank=True,
                        help_text="Nacelle orientation in degrees",
                        null=True,
                    ),
                ),
                (
                    "grid_voltage",
                    models.FloatField(
                        blank=True, help_text="Grid voltage in V", null=True
                    ),
                ),
                (
                    "grid_frequency",
                    models.FloatField(
                        blank=True, help_text="Grid frequency in Hz", null=True
                    ),
                ),
                (
                    "turbine",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="measurements",
                        to="core.windturbine",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GridComplianceCheck",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True, db_index=True)),
                (
                    "check_type",
                    models.CharField(
                        choices=[
                            ("lvrt", "Low Voltage Ride Through"),
                            ("hvrt", "High Voltage Ride Through"),
                            ("frequency", "Frequency Deviation"),
                            ("reactive_power", "Reactive Power Support"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "voltage_pu",
                    models.FloatField(
                        blank=True, help_text="Voltage in per-unit", null=True
                    ),
                ),
                (
                    "duration",
                    models.FloatField(
                        blank=True, help_text="Event duration in seconds", null=True
                    ),
                ),
                (
                    "frequency",
                    models.FloatField(
                        blank=True, help_text="Frequency in Hz", null=True
                    ),
                ),
                ("compliant", models.BooleanField(default=True)),
                ("details", models.JSONField(blank=True, default=dict)),
                (
                    "turbine",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="compliance_checks",
                        to="core.windturbine",
                    ),
                ),
            ],
        ),
    ]
